swagger: '2.0'
info:
  version: 1.0.0
  title: Krozu API v1.0.0
  description: >-
    # Introduction

    Krozu is the worlds only hierarchical recursive project management tool that
    effectively works as a proper business management tool and a system of
    record. https://krozu.com


    Krozu's API allows for remote programmatic interfacing with Krozu to
    manipulate and control your account through development of a third party
    solution. Please see our Terms of Service Agreement
    (https://krozu.com/terms)


    # Overview

    Krozu's API uses Oauth 2.0 and therefore must be pre-approved by the users
    account that will bear the responsibility of the third party application and
    be limited by the permission levels accessible by that specific user. This
    API will act as if it were the specified user. The Client application must
    be added in the Integrations area within Krozu
    https://app.krozu.com/integrations


    # Krozu Account Integrations

    To use OAuth 2.0 you must acquire a **Client ID** and a **Client Secret**
    from within your Krozu account. This can be found on the dashboard in the
    left sidebar under **My Account** and then **Integrations**. You will be
    asked for the **Client Name** which is for your identification of the
    connecting application, you will also be asked for the **Redirect URL**
    which should be the callback URL of the application trying to connect to
    your Krozu account. This **Redirect URL** must also be the same
    **redirect_uri** you use below during the API authentication procedure. Once
    you have entered this information, you will then click Submit to add the
    application to your list of Active Integrations. In this list is where you
    will find the **Client ID** and the **Client Secret** to be used during the
    API authentication process.


    # Authentication

    ## OAuth 2.0 Overview

    The Authorization Code grant type is a 2 part process. The code token must
    be requested and then exchanged for an access token.


    ### Getting an Auth Code

    <br>

    <code>

    GET

    /oauth/authorize

    </code>


    ### Request


    - **client_id** - *(required)* The client ID making the request

    - **redirect_uri** - *(required)* The URL which to redirect back to. This
    parameter is required and should be defined in the client settings.

    - **response_type** - *(required)* Must be set to “code”

    - **scope** - *(required)* Space delimited scope chosen from this list:
    profile-public profile-email profile-owned get-info perform-actions

    - **state** - *(optional)* Client generated CSRF token. This value will be
    passed back to the client.



    ### Response


    - **code** - *(string)* The authorization code.

    - **state** - *(mixed)* If a state parameter were supplied in the request,
    it would be returned for CSRF verification.

    ***

    ## Gaining an Access Token

    Once you have the authorization code, you must make another request to
    obtain an access token. The authorization code is only valid for
    approximately 30 seconds.


    <br>

    <code>

    POST

    oauth/token

    </code>


    ### Request


    - **grant_type** - *(required)* Must be “authorization_code”

    - **code** - *(required)* The Auth Code returned from the authorization
    server

    - **client_id** - *(required)* The client id

    - **client_secret** - *(required)* The client secret

    - **redirect_uri** - *(required)* URL to redirect the user back to

    - **state** - *(optional)* CSRF Token. Required if “state” was used to get
    the Auth Code.



    ### Response


    The response will be in JSON format


    - **access_token** – The access token

    - **expires_in** – Time the access token expires in seconds from current
    time

    - **token_type** – Type of token. “Bearer” is only supported

    - **refresh_token** – The refresh token

    <br>


    ```

    {
     "access_token": "pen5fj6gsvgyt9j4fohayegypbo65f8fpjodpdckuiid5ne4lk",
     "expires_in": 3600,
     "token_type": "Bearer",
     "refresh_token": "ig96fu9n2kjnwojzofajvqsfzb2oltjthtermizvlnzlejh5fd2"
    }

    ```


    ## Usage

    Client applications should specify their access token as a Bearer token in
    the Authorization header of their request. For example, when using cURL:

    ```

    $headers = array(
       "Accept: application/json",
       "Authorization: Bearer {token}",
    );

    curl_setopt($curl, CURLOPT_HTTPHEADER, $headers);

    ```


    Response will be in JSON format.



    # Error Codes

    Standard HTTP error codes are applicable as well a a "status" response
    variable stating either success or failure.


    # Dates and Times

    All output from the API will be in ISO-8601 date and time format, for
    example: 2021-10-30T10:00:00Z as UTC time and date format. However all
    Inputs to the API are to be MySql type format in the form of the local time
    converted into UTC time however without notations, for example: 2021-10-30
    10:00:00


    # Rate limit

    Our Terms of Service Agreement (https://krozu.com/terms) state the Rate
    Limit possible for API usage. This may change as needed by Krozu based on
    the Fair Use Policy. If your needs differ from this limitation, please
    contact us at support@krozu.com
    
host: app.krozu.com
basePath: /
schemes:
  - https
consumes: []
produces:
  - application/json
paths:
  /api/v1.00/user/:
    get:
      summary: Get - My User Profile
      description: Returns the current users profile information.
      operationId: Get-MyUserProfile
      parameters:
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
          description: Accept
      responses:
        '200':
          description: '200'
          schema:
            type: object
            properties:
              uuid:
                type: string
                description: uuid
              firstname:
                type: string
                description: firstname
              lastname:
                type: string
                description: lastname
              email:
                type: string
                description: email
              photo:
                type: string
                description: photo
              id:
                type: string
                description: id
              clockstatus:
                type: integer
                format: int32
                description: clockstatus
              taskname:
                type: string
                description: taskname
              newInvitationCount:
                type: integer
                format: int32
                description: newInvitationCount
  /api/v1.00/boards:
    get:
      summary: Get - My Boards
      description: Returns all accessible boards for the current user.
      operationId: Get-MyBoards
      parameters:
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
          description: Accept
      responses:
        '200':
          description: '200'
          schema:
            type: array
            items:
              type: object
              properties:
                uuid:
                  type: string
                  description: uuid
                name:
                  type: string
                  description: name
                public:
                  type: integer
                  format: int32
                  description: public
                progress:
                  type: integer
                  format: int32
                  description: progress
                isboard:
                  type: integer
                  format: int32
                  description: isboard
                unread:
                  type: string
                  description: unread
                isroot:
                  type: integer
                  format: int32
                  description: isroot
                id:
                  type: string
                  description: id
  /api/v1.00/owned:
    get:
      summary: Get - My Owned Trees
      description: >-
        Returns the root boards, or Project Tree root boards owned by the
        current user.
      operationId: Get-MyOwnedTrees
      parameters:
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
          description: Accept
      responses:
        '200':
          description: '200'
          schema:
            type: array
            items:
              type: object
              properties:
                uuid:
                  type: string
                  description: uuid
                name:
                  type: string
                  description: name
                public:
                  type: integer
                  format: int32
                  description: public
                progress:
                  type: integer
                  format: int32
                  description: progress
                duedate:
                  type: string
                  description: duedate
                startdate:
                  type: string
                  description: startdate
                enddate:
                  type: string
                  description: enddate
                created:
                  type: string
                  description: created
                id:
                  type: string
                  description: id
  /api/v1.00/favorite:
    get:
      summary: Get - My Favorite Boards
      description: Returns the current users's Favorite boards.
      operationId: Get-MyFavoriteBoards
      parameters:
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
          description: Accept
      responses:
        '200':
          description: '200'
          schema:
            type: array
            items:
              type: object
              properties:
                uuid:
                  type: string
                  description: uuid
                name:
                  type: string
                  description: name
                public:
                  type: integer
                  format: int32
                  description: public
                progress:
                  type: integer
                  format: int32
                  description: progress
                isboard:
                  type: integer
                  format: int32
                  description: isboard
                unread:
                  type: string
                  description: unread
                isroot:
                  type: integer
                  format: int32
                  description: isroot
                id:
                  type: string
                  description: id
  /api/v1.00/recent:
    get:
      summary: Get - My Recent Boards
      description: Returns boards that have been accessed by current user the most recent.
      operationId: Get-MyRecentBoards
      parameters:
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
          description: Accept
      responses:
        '200':
          description: '200'
          schema:
            type: array
            items:
              type: object
              properties:
                uuid:
                  type: string
                  description: uuid
                name:
                  type: string
                  description: name
                public:
                  type: integer
                  format: int32
                  description: public
                progress:
                  type: integer
                  format: int32
                  description: progress
                isboard:
                  type: integer
                  format: int32
                  description: isboard
                unread:
                  type: string
                  description: unread
                isroot:
                  type: integer
                  format: int32
                  description: isroot
                id:
                  type: string
                  description: id
  /api/v1.00/popular:
    get:
      summary: Get - My Popular Boards
      description: Returns the most popular boards the current user accesses often.
      operationId: Get-MyPopularBoards
      parameters:
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
          description: Accept
      responses:
        '200':
          description: '200'
          schema:
            type: array
            items:
              type: object
              properties:
                uuid:
                  type: string
                  description: uuid
                name:
                  type: string
                  description: name
                public:
                  type: integer
                  format: int32
                  description: public
                progress:
                  type: integer
                  format: int32
                  description: progress
                isboard:
                  type: integer
                  format: int32
                  description: isboard
                unread:
                  type: string
                  description: unread
                isroot:
                  type: integer
                  format: int32
                  description: isroot
                id:
                  type: string
                  description: id
  /api/v1.00/assigned:
    get:
      summary: Get - My Assigned Boards
      description: >-
        Returns all boards the current user is assigned to or has Team Member
        access to.
      operationId: Get-MyAssignedBoards
      parameters:
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
          description: Accept
      responses:
        '200':
          description: '200'
          schema:
            type: array
            items:
              type: object
              properties:
                uuid:
                  type: string
                  description: uuid
                name:
                  type: string
                  description: name
                public:
                  type: integer
                  format: int32
                  description: public
                progress:
                  type: integer
                  format: int32
                  description: progress
                isboard:
                  type: integer
                  format: int32
                  description: isboard
                unread:
                  type: string
                  description: unread
                isroot:
                  type: integer
                  format: int32
                  description: isroot
                id:
                  type: string
                  description: id
  /api/v1.00/user/:%7B%7Bguestuseruuid%7D%7D: {}
  /api/v1.00/board/:%7B%7BBoard%20UUID%7D%7D: {}
  /api/v1.00/boardgroups/{boardUUID}:
    get:
      summary: Get - Board Groups
      description: >-
        Returns all groups and their settings applicable to this specified
        board.
      operationId: Get-BoardGroups
      parameters:
        - name: boardUUID
          in: path
          required: true
          type: string
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
      responses:
        '200':
          description: '200'
          schema:
            type: array
            items:
              type: object
              properties:
                uuid:
                  type: string
                  description: uuid
                name:
                  type: string
                  description: name
                sort:
                  type: integer
                  format: int32
                  description: sort
                created:
                  type: string
                  description: created
                id:
                  type: string
                  description: id
  /api/v1.00/boardlists/:%7B%7BBoard%20UUID%7D%7D: {}
  /api/v1.00/childobjects/card/:%7B%7BBoard%20UUID%7D%7D: {}
  /api/v1.00/boardcards/:%7B%7BBoard%20UUID%7D%7D: {}
  /api/v1.00/listcards/:%7B%7BList%20UUID%7D%7D: {}
  /api/v1.00/boardchildren/:%7B%7BBoard%20UUID%7D%7D: {}
  /api/v1.00/group/:%7B%7BGroup%20UUID%7D%7D: {}
  /api/v1.00/list/:%7B%7BList%20UUID%7D%7D: {}
  /api/v1.00/card/:%7B%7BCard%20UUID%7D%7D: {}
  /api/v1.00/comments/:%7B%7BCard%20UUID%7D%7D: {}
  /api/v1.00/messages/:%7B%7BBoard%20UUID%7D%7D: {}
  /api/v1.00/tags/:%7B%7BCard%20UUID%7D%7D: {}
  /api/v1.00/members/:%7B%7BCard%20UUID%7D%7D: {}
  /api/v1.00/members/:%7B%7BBoard%20UUID%7D%7D: {}
  /api/v1.00/checklists/:%7B%7BCard%20UUID%7D%7D: {}
  /api/v1.00/checklistitems/:%7B%7BChecklist%20UUID%7D%7D: {}
  /api/v1.00/boardrecords/:%7B%7BBoard%20UUID%7D%7D: {}
  /api/v1.00/cardrecords/:%7B%7BCard%20UUID%7D%7D: {}
  /api/v1.00/listrecords/:%7B%7BList%20UUID%7D%7D: {}
  /api/v1.00/notifications:
    get:
      summary: Get - My Notifications
      description: Returns all active notifications for the current user.
      operationId: Get-MyNotifications
      parameters:
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
          description: Accept
      responses:
        '200':
          description: '200'
          schema:
            type: object
            properties:
              alerts:
                type: array
                items:
                  type: object
                  properties:
                    uuid:
                      type: string
                      description: uuid
                    body:
                      type: string
                      description: body
                    subtype:
                      type: integer
                      format: int32
                      description: subtype
                    seen:
                      type: integer
                      format: int32
                      description: seen
                    date:
                      type: string
                      description: date
                    fromname:
                      type: string
                      description: fromname
                    carduuid:
                      type: string
                      description: carduuid
                    isboard:
                      type: integer
                      format: int32
                      description: isboard
                    boarduuid:
                      type: string
                      description: boarduuid
                    title:
                      type: string
                      description: title
                    url:
                      type: string
                      description: url
                description: alerts
              unread:
                type: array
                items: {}
                description: unread
  /api/v1.00/invites:
    get:
      summary: Get - My Invitations
      description: Returns all active invitations for the current user.
      operationId: Get-MyInvitations
      parameters:
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
          description: Accept
      responses:
        '200':
          description: '200'
          schema:
            type: array
            items:
              type: object
              properties:
                uuid:
                  type: string
                  description: uuid
                invitee:
                  type: string
                  description: invitee
                cardname:
                  type: string
                  description: cardname
                isboard:
                  type: integer
                  format: int32
                  description: isboard
                boardname:
                  type: string
                  description: boardname
                boarduuid:
                  type: string
                  description: boarduuid
                role:
                  type: string
                  description: role
                response:
                  type: string
                  description: response
  /api/v1.00/clients/:%7B%7BBoard%20UUID%7D%7D: {}
  /api/v1.00/tasks/all:
    get:
      summary: Get - My Tasks All
      description: Returns the current users tasks.
      operationId: Get-MyTasksAll
      parameters:
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
          description: Accept
      responses:
        '200':
          description: '200'
          schema:
            type: object
            properties:
              current_page:
                type: integer
                format: int32
                description: current_page
              data:
                type: array
                items:
                  type: object
                  properties:
                    uuid:
                      type: string
                      description: uuid
                    taskname:
                      type: string
                      description: taskname
                    projectname:
                      type: string
                      description: projectname
                    projectuuid:
                      type: string
                      description: projectuuid
                    hours:
                      type: string
                      description: hours
                    duedate:
                      type: string
                      description: duedate
                    progress:
                      type: integer
                      format: int32
                      description: progress
                description: data
              first_page_url:
                type: string
                description: first_page_url
              from:
                type: integer
                format: int32
                description: from
              next_page_url:
                type: string
                description: next_page_url
              path:
                type: string
                description: path
              per_page:
                type: integer
                format: int32
                description: per_page
              prev_page_url:
                type: string
                description: prev_page_url
              to:
                type: integer
                format: int32
                description: to
  /api/v1.00/tasks/new:
    get:
      summary: Get - My Tasks New
      description: Returns the current users tasks that are new withing the last 30 days.
      operationId: Get-MyTasksNew
      parameters:
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
          description: Accept
      responses:
        '200':
          description: '200'
          schema:
            type: object
            properties:
              current_page:
                type: integer
                format: int32
                description: current_page
              data:
                type: array
                items:
                  type: object
                  properties:
                    uuid:
                      type: string
                      description: uuid
                    taskname:
                      type: string
                      description: taskname
                    projectname:
                      type: string
                      description: projectname
                    projectuuid:
                      type: string
                      description: projectuuid
                    hours:
                      type: string
                      description: hours
                    duedate:
                      type: string
                      description: duedate
                    progress:
                      type: integer
                      format: int32
                      description: progress
                description: data
              first_page_url:
                type: string
                description: first_page_url
              from:
                type: integer
                format: int32
                description: from
              next_page_url:
                type: string
                description: next_page_url
              path:
                type: string
                description: path
              per_page:
                type: integer
                format: int32
                description: per_page
              prev_page_url:
                type: string
                description: prev_page_url
              to:
                type: integer
                format: int32
                description: to
  /api/v1.00/tasks/overdue:
    get:
      summary: Get - My Tasks Overdue
      description: Returns the current users overdue tasks.
      operationId: Get-MyTasksOverdue
      parameters:
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
          description: Accept
      responses:
        '200':
          description: '200'
          schema:
            type: object
            properties:
              current_page:
                type: integer
                format: int32
                description: current_page
              data:
                type: array
                items: {}
                description: data
              first_page_url:
                type: string
                description: first_page_url
              from:
                type: string
                description: from
              next_page_url:
                type: string
                description: next_page_url
              path:
                type: string
                description: path
              per_page:
                type: integer
                format: int32
                description: per_page
              prev_page_url:
                type: string
                description: prev_page_url
              to:
                type: string
                description: to
  /api/v1.00/tasks/workload:
    get:
      summary: Get - My Tasks Workload
      description: >-
        Returns the current users tasks that are either assigned or are
        accessible as a Team Member.
      operationId: Get-MyTasksWorkload
      parameters:
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
          description: Accept
      responses:
        '200':
          description: '200'
          schema:
            type: object
            properties:
              current_page:
                type: integer
                format: int32
                description: current_page
              data:
                type: array
                items:
                  type: object
                  properties:
                    uuid:
                      type: string
                      description: uuid
                    taskname:
                      type: string
                      description: taskname
                    projectname:
                      type: string
                      description: projectname
                    projectuuid:
                      type: string
                      description: projectuuid
                    hours:
                      type: string
                      description: hours
                    duedate:
                      type: string
                      description: duedate
                    progress:
                      type: integer
                      format: int32
                      description: progress
                description: data
              first_page_url:
                type: string
                description: first_page_url
              from:
                type: integer
                format: int32
                description: from
              next_page_url:
                type: string
                description: next_page_url
              path:
                type: string
                description: path
              per_page:
                type: integer
                format: int32
                description: per_page
              prev_page_url:
                type: string
                description: prev_page_url
              to:
                type: integer
                format: int32
                description: to
  /api/v1.00/hours:
    get:
      summary: Get - My Hours
      description: >-
        Returns the current users number of hours worked per Project Tree for
        the last payroll period specified in the users profile under "View
        Hours".
      operationId: Get-MyHours
      parameters:
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
          description: Accept
      responses:
        '200':
          description: '200'
          schema:
            type: object
            properties:
              dabbed10559a11ec986459ee7f940894:
                type: object
                properties:
                  treeuuid:
                    type: string
                    description: treeuuid
                  treename:
                    type: string
                    description: treename
                  hours:
                    type: string
                    description: hours
                  payrollstart:
                    type: string
                    description: payrollstart
                  period:
                    type: string
                    description: period
                  treeowner:
                    type: string
                    description: treeowner
                  id:
                    type: string
                    description: id
                description: dabbed10559a11ec986459ee7f940894
              f30bdc90559011ecb13aab862a14777f:
                type: object
                properties:
                  treeuuid:
                    type: string
                    description: treeuuid
                  treename:
                    type: string
                    description: treename
                  hours:
                    type: string
                    description: hours
                  payrollstart:
                    type: string
                    description: payrollstart
                  period:
                    type: string
                    description: period
                  treeowner:
                    type: string
                    description: treeowner
                  id:
                    type: string
                    description: id
                description: f30bdc90559011ecb13aab862a14777f
  /api/v1.00/billing:
    get:
      summary: Get - My Billing
      description: Returns the current users billing status.
      operationId: Get-MyBilling
      parameters:
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
          description: Accept
      responses:
        '200':
          description: '200'
          schema:
            type: string
  /api/v1.00/boardhierarchy/:%7B%7BTree%20UUID%7D%7D: {}
  /api/v1.00/add/card/:%7B%7BBoard%20UUID%7D%7D: {}
  /api/v1.00/delete/card/:%7B%7BCard%20UUID%7D%7D: {}
  /api/v1.00/add/message/:%7B%7BBoard%20UUID%7D%7D: {}
  /api/v1.00/add/comment/:%7B%7BCard%20UUID%7D%7D: {}
  /api/v1.00/add/checklist/:%7B%7BCard%20UUID%7D%7D: {}
  /api/v1.00/rename/checklist/:%7B%7BChecklist%20UUID%7D%7D: {}
  /api/v1.00/delete/checklist/:%7B%7BChecklist%20UUID%7D%7D: {}
  /api/v1.00/add/checklistitem/:%7B%7BChecklist%20UUID%7D%7D: {}
  /api/v1.00/check/checklistitem/:%7B%7BChecklistItem%20UUID%7D%7D: {}
  /api/v1.00/uncheck/checklistitem/:%7B%7BChecklistItem%20UUID%7D%7D: {}
  /api/v1.00/rename/checklistitem/:%7B%7BChecklistItem%20UUID%7D%7D: {}
  /api/v1.00/delete/checklistitem/:%7B%7BChecklistItem%20UUID%7D%7D: {}
  /api/v1.00/add/list/:%7B%7Bboard%20UUID%7D%7D: {}
  /api/v1.00/rename/list/:%7B%7BList%20UUID%7D%7D: {}
  /api/v1.00/rename/board/:%7B%7BboardUUID%7D%7D: {}
  /api/v1.00/rename/card/:%7B%7BCard%20UUID%7D%7D: {}
  /api/v1.00/rename/group/:%7B%7BGroup%20UUID%7D%7D: {}
  /api/v1.00/move/card/:%7B%7BBoard%20UUID%7D%7D: {}
  /api/v1.00/assign/card/:%7B%7BCard%20UUID%7D%7D: {}
  /api/v1.00/assign/board/:%7B%7BBoard%20UUID%7D%7D: {}
  /api/v1.00/unassign/card/:%7B%7BCard%20UUID%7D%7D: {}
  /api/v1.00/unassign/board/:%7B%7BBoard%20UUID%7D%7D: {}
  /api/v1.00/delete/list/:%7B%7BList%20UUID%7D%7D: {}
  /api/v1.00/tracking/list/:%7B%7BList%20UUID%7D%7D: {}
  /api/v1.00/tester/list/:%7B%7BList%20UUID%7D%7D: {}
  /api/v1.00/weighting/list/:%7B%7BList%20UUID%7D%7D: {}
  /api/v1.00/weight/list/:%7B%7BList%20UUID%7D%7D: {}
  /api/v1.00/limit/list/:%7B%7BList%20UUID%7D%7D: {}
  /api/v1.00/progress/card/:%7B%7BCard%20UUID%7D%7D: {}
  /api/v1.00/recurse/card/:%7B%7BCard%20UUID%7D%7D: {}
  /api/v1.00/recurse/board/:%7B%7BBoard%20UUID%7D%7D: {}
  /api/v1.00/archive/card/:%7B%7BCard%20UUID%7D%7D: {}
  /api/v1.00/unarchive/card/:%7B%7BCard%20UUID%7D%7D: {}
  /api/v1.00/archive/list/:%7B%7BList%20UUID%7D%7D: {}
  /api/v1.00/unarchive/list/:%7B%7BList%20UUID%7D%7D: {}
  /api/v1.00/archive/board/:%7B%7BBoard%20UUID%7D%7D: {}
  /api/v1.00/unarchive/board/:%7B%7BBoard%20UUID%7D%7D: {}
  /api/v1.00/estimate/card/:%7B%7BCard%20UUID%7D%7D: {}
  /api/v1.00/notify/card/:%7B%7BCard%20UUID%7D%7D: {}
  /api/v1.00/start/card/:%7B%7BCard%20UUID%7D%7D: {}
  /api/v1.00/end/card/:%7B%7BCard%20UUID%7D%7D: {}
  /api/v1.00/due/card/:%7B%7BCard%20UUID%7D%7D: {}
  /api/v1.00/start/board/:%7B%7BBoard%20UUID%7D%7D: {}
  /api/v1.00/end/board/:%7B%7BBoard%20UUID%7D%7D: {}
  /api/v1.00/due/board/:%7B%7BBoard%20UUID%7D%7D: {}
  /api/v1.00/estimate/board/:%7B%7BBoard%20UUID%7D%7D: {}
  /api/v1.00/notify/board/:%7B%7BBoard%20UUID%7D%7D: {}
  /api/v1.00/user/{guestUserUUID}:
    get:
      summary: Get - Other User Profile
      description: Returns public information about another known user.
      operationId: Get-OtherUserProfile
      parameters:
        - name: guestUserUUID
          in: path
          required: true
          type: string
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
      responses:
        '200':
          description: '200'
          schema:
            type: object
            properties:
              uuid:
                type: string
                description: uuid
              firstname:
                type: string
                description: firstname
              lastname:
                type: string
                description: lastname
              photo:
                type: string
                description: photo
              id:
                type: string
                description: id
  /api/v1.00/board/{boardUUID}:
    get:
      summary: Get - Board
      description: Returns specified board settings.
      operationId: Get-Board
      parameters:
        - name: boardUUID
          in: path
          required: true
          type: string
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
      responses:
        '200':
          description: '200'
          schema:
            type: array
            items:
              type: object
              properties:
                uuid:
                  type: string
                  description: uuid
                name:
                  type: string
                  description: name
                listuuid:
                  type: string
                  description: listuuid
                progress:
                  type: integer
                  format: int32
                  description: progress
                pinned:
                  type: integer
                  format: int32
                  description: pinned
                archived:
                  type: integer
                  format: int32
                  description: archived
                estimatedhours:
                  type: integer
                  format: int32
                  description: estimatedhours
                clientuuid:
                  type: string
                  description: clientuuid
                duedate:
                  type: string
                  description: duedate
                startdate:
                  type: string
                  description: startdate
                enddate:
                  type: string
                  description: enddate
                created:
                  type: string
                  description: created
                id:
                  type: string
                  description: id
  /api/v1.00/boardlists/{boardUUID}:
    get:
      summary: Get - Board Lists
      description: Returns all lists and their settings applicable to the specified board.
      operationId: Get-BoardLists
      parameters:
        - name: boardUUID
          in: path
          required: true
          type: string
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
      responses:
        '200':
          description: '200'
          schema:
            type: array
            items:
              type: object
              properties:
                uuid:
                  type: string
                  description: uuid
                name:
                  type: string
                  description: name
                groupuuid:
                  type: string
                  description: groupuuid
                groupsort:
                  type: integer
                  format: int32
                  description: groupsort
                boardsort:
                  type: integer
                  format: int32
                  description: boardsort
                cardlimit:
                  type: integer
                  format: int32
                  description: cardlimit
                weighting:
                  type: integer
                  format: int32
                  description: weighting
                weigthinglow:
                  type: integer
                  format: int32
                  description: weigthinglow
                weightinghigh:
                  type: integer
                  format: int32
                  description: weightinghigh
                timetracking:
                  type: integer
                  format: int32
                  description: timetracking
                resetcardprogress:
                  type: integer
                  format: int32
                  description: resetcardprogress
                allowtester:
                  type: integer
                  format: int32
                  description: allowtester
                archived:
                  type: integer
                  format: int32
                  description: archived
                created:
                  type: string
                  description: created
                id:
                  type: string
                  description: id
  /api/v1.00/childobjects/card/{boardUUID}:
    get:
      summary: Get - Card Child Objects
      description: >-
        Returns all child objects that would be affected in the case of a
        deletion.
      operationId: Get-CardChildObjects
      parameters:
        - name: boardUUID
          in: path
          required: true
          type: string
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
      responses:
        '200':
          description: '200'
          schema:
            type: object
            properties:
              childBoards:
                type: object
                properties:
                  f30bdc90559011ecb13aab862a14777f:
                    type: string
                    description: f30bdc90559011ecb13aab862a14777f
                description: childBoards
              childCards:
                type: object
                properties:
                  db781000fe575d25abe71914e94c1133:
                    type: string
                    description: db781000fe575d25abe71914e94c1133
                  e4431000feab5d25a89b0f64c85d3325:
                    type: string
                    description: e4431000feab5d25a89b0f64c85d3325
                description: childCards
              childCardHours:
                type: array
                items: {}
                description: childCardHours
              attachments:
                type: array
                items: {}
                description: attachments
              comments:
                type: object
                properties:
                  21cb7de0559111ec8d834be3ccc50551:
                    type: string
                    description: 21cb7de0559111ec8d834be3ccc50551
                description: comments
              checklists:
                type: object
                properties:
                  0a573ad058f911ecbc4015fe94798880:
                    type: string
                    description: 0a573ad058f911ecbc4015fe94798880
                description: checklists
              checklistItems:
                type: object
                properties:
                  1771171058f911ec94c1f7b8ac7e15b6:
                    type: string
                    description: 1771171058f911ec94c1f7b8ac7e15b6
                  1a93bcb058f911eca3e8d7d3742b3ba8:
                    type: string
                    description: 1a93bcb058f911eca3e8d7d3742b3ba8
                  1c1317d058f911eca23f336f0cb9113c:
                    type: string
                    description: 1c1317d058f911eca23f336f0cb9113c
                  1ee3d3c058f911ec8d74dd0432e5771d:
                    type: string
                    description: 1ee3d3c058f911ec8d74dd0432e5771d
                description: checklistItems
              lists:
                type: object
                properties:
                  37441000fe9f5d258dfd47f898994c84:
                    type: string
                    description: 37441000fe9f5d258dfd47f898994c84
                  ba4b1000fe4b5d25a570f7e9172b79e9:
                    type: string
                    description: ba4b1000fe4b5d25a570f7e9172b79e9
                description: lists
  /api/v1.00/boardcards/{boardUUID}:
    get:
      summary: Get - Board Cards
      description: Returns all cards and their settings applicable to the specified board.
      operationId: Get-BoardCards
      parameters:
        - name: boardUUID
          in: path
          required: true
          type: string
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
      responses:
        '200':
          description: '200'
          schema:
            type: array
            items:
              type: object
              properties:
                uuid:
                  type: string
                  description: uuid
                name:
                  type: string
                  description: name
                listuuid:
                  type: string
                  description: listuuid
                progress:
                  type: integer
                  format: int32
                  description: progress
                weightedprogress:
                  type: integer
                  format: int32
                  description: weightedprogress
                pinned:
                  type: integer
                  format: int32
                  description: pinned
                archived:
                  type: integer
                  format: int32
                  description: archived
                estimatedhours:
                  type: integer
                  format: int32
                  description: estimatedhours
                clientuuid:
                  type: string
                  description: clientuuid
                duedate:
                  type: string
                  description: duedate
                startdate:
                  type: string
                  description: startdate
                enddate:
                  type: string
                  description: enddate
                created:
                  type: string
                  description: created
                id:
                  type: string
                  description: id
  /api/v1.00/listcards/{listUUID}:
    get:
      summary: Get - List Cards
      description: Returns all cards and their settings applicable to the specified list.
      operationId: Get-ListCards
      parameters:
        - name: listUUID
          in: path
          required: true
          type: string
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
      responses:
        '200':
          description: '200'
          schema:
            type: array
            items:
              type: object
              properties:
                uuid:
                  type: string
                  description: uuid
                name:
                  type: string
                  description: name
                listuuid:
                  type: string
                  description: listuuid
                progress:
                  type: integer
                  format: int32
                  description: progress
                weightedprogress:
                  type: integer
                  format: int32
                  description: weightedprogress
                pinned:
                  type: integer
                  format: int32
                  description: pinned
                archived:
                  type: integer
                  format: int32
                  description: archived
                estimatedhours:
                  type: integer
                  format: int32
                  description: estimatedhours
                clientuuid:
                  type: string
                  description: clientuuid
                duedate:
                  type: string
                  description: duedate
                startdate:
                  type: string
                  description: startdate
                enddate:
                  type: string
                  description: enddate
                created:
                  type: string
                  description: created
                id:
                  type: string
                  description: id
  /api/v1.00/boardchildren/{boardUUID}:
    get:
      summary: Get - Board Children
      description: >-
        Returns all child boards contained or dependents of specified board.
        This only returns immediate dependencies.
      operationId: Get-BoardChildren
      parameters:
        - name: boardUUID
          in: path
          required: true
          type: string
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
      responses:
        '200':
          description: '200'
          schema:
            type: array
            items:
              type: object
              properties:
                uuid:
                  type: string
                  description: uuid
                name:
                  type: string
                  description: name
                listuuid:
                  type: string
                  description: listuuid
                progress:
                  type: integer
                  format: int32
                  description: progress
                pinned:
                  type: integer
                  format: int32
                  description: pinned
                archived:
                  type: integer
                  format: int32
                  description: archived
                estimatedhours:
                  type: integer
                  format: int32
                  description: estimatedhours
                clientuuid:
                  type: string
                  description: clientuuid
                duedate:
                  type: string
                  description: duedate
                startdate:
                  type: string
                  description: startdate
                enddate:
                  type: string
                  description: enddate
                created:
                  type: string
                  description: created
                id:
                  type: string
                  description: id
  /api/v1.00/group/{groupUUID}:
    get:
      summary: Get - Group
      description: Returns the specified group settings.
      operationId: Get-Group
      parameters:
        - name: groupUUID
          in: path
          required: true
          type: string
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
      responses:
        '200':
          description: '200'
          schema:
            type: array
            items:
              type: object
              properties:
                uuid:
                  type: string
                  description: uuid
                name:
                  type: string
                  description: name
                sort:
                  type: integer
                  format: int32
                  description: sort
                created:
                  type: string
                  description: created
                id:
                  type: string
                  description: id
  /api/v1.00/list/{listUUID}:
    get:
      summary: Get - List
      description: Returns the specified list settings.
      operationId: Get-List
      parameters:
        - name: listUUID
          in: path
          required: true
          type: string
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
      responses:
        '200':
          description: '200'
          schema:
            type: array
            items:
              type: object
              properties:
                uuid:
                  type: string
                  description: uuid
                name:
                  type: string
                  description: name
                groupuuid:
                  type: string
                  description: groupuuid
                groupsort:
                  type: integer
                  format: int32
                  description: groupsort
                boardsort:
                  type: integer
                  format: int32
                  description: boardsort
                cardlimit:
                  type: integer
                  format: int32
                  description: cardlimit
                weighting:
                  type: integer
                  format: int32
                  description: weighting
                weigthinglow:
                  type: integer
                  format: int32
                  description: weigthinglow
                weightinghigh:
                  type: integer
                  format: int32
                  description: weightinghigh
                timetracking:
                  type: integer
                  format: int32
                  description: timetracking
                resetcardprogress:
                  type: integer
                  format: int32
                  description: resetcardprogress
                allowtester:
                  type: integer
                  format: int32
                  description: allowtester
                archived:
                  type: integer
                  format: int32
                  description: archived
                created:
                  type: string
                  description: created
                id:
                  type: string
                  description: id
  /api/v1.00/card/{cardUUID}:
    get:
      summary: Get - Card
      description: Returns the specified card settings.
      operationId: Get-Card
      parameters:
        - name: cardUUID
          in: path
          required: true
          type: string
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
      responses:
        '200':
          description: '200'
          schema:
            type: array
            items:
              type: object
              properties:
                uuid:
                  type: string
                  description: uuid
                name:
                  type: string
                  description: name
                listuuid:
                  type: string
                  description: listuuid
                progress:
                  type: integer
                  format: int32
                  description: progress
                weightedprogress:
                  type: integer
                  format: int32
                  description: weightedprogress
                pinned:
                  type: integer
                  format: int32
                  description: pinned
                archived:
                  type: integer
                  format: int32
                  description: archived
                estimatedhours:
                  type: integer
                  format: int32
                  description: estimatedhours
                clientuuid:
                  type: string
                  description: clientuuid
                duedate:
                  type: string
                  description: duedate
                startdate:
                  type: string
                  description: startdate
                enddate:
                  type: string
                  description: enddate
                created:
                  type: string
                  description: created
                id:
                  type: string
                  description: id
  /api/v1.00/comments/{cardUUID}:
    get:
      summary: Get - Card Comments
      description: Returns all comments associated with the specified card.
      operationId: Get-CardComments
      parameters:
        - name: cardUUID
          in: path
          required: true
          type: string
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
      responses:
        '200':
          description: '200'
          schema:
            type: array
            items:
              type: object
              properties:
                message:
                  type: string
                  description: message
                uuid:
                  type: string
                  description: uuid
                name:
                  type: string
                  description: name
                photo:
                  type: string
                  description: photo
                ext:
                  type: string
                  description: ext
                filename:
                  type: string
                  description: filename
                type:
                  type: string
                  description: type
                url:
                  type: string
                  description: url
                created:
                  type: string
                  description: created
                id:
                  type: string
                  description: id
  /api/v1.00/messages/{boardUUID}:
    get:
      summary: Get - Board Messages
      description: Returns all chat messages from the specified board.
      operationId: Get-BoardMessages
      parameters:
        - name: boardUUID
          in: path
          required: true
          type: string
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
      responses:
        default:
          description: default
          schema: {}
  '/api/v1.00/tags/:': {}
  /api/v1.00/members/{boardUUID}:
    get:
      summary: Get - Board Members
      description: >-
        Returns all members and their permission levels associated with the
        specified board.
      operationId: Get-BoardMembers
      parameters:
        - name: boardUUID
          in: path
          required: true
          type: string
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
      responses:
        '200':
          description: '200'
          schema:
            type: object
            properties:
              Tree Owner:
                type: array
                items:
                  type: object
                  properties:
                    carduuid:
                      type: string
                      description: carduuid
                    name:
                      type: string
                      description: name
                    email:
                      type: string
                      description: email
                    image:
                      type: string
                      description: image
                    uuid:
                      type: string
                      description: uuid
                    status:
                      type: string
                      description: status
                    inherited:
                      type: integer
                      format: int32
                      description: inherited
                    inheritedfrom:
                      type: string
                      description: inheritedfrom
                    immutable:
                      type: boolean
                      description: immutable
                    id:
                      type: string
                      description: id
                description: Tree Owner
              Guest:
                type: array
                items:
                  type: object
                  properties:
                    carduuid:
                      type: string
                      description: carduuid
                    name:
                      type: string
                      description: name
                    email:
                      type: string
                      description: email
                    image:
                      type: string
                      description: image
                    uuid:
                      type: string
                      description: uuid
                    status:
                      type: string
                      description: status
                    inherited:
                      type: integer
                      format: int32
                      description: inherited
                    inheritedfrom:
                      type: string
                      description: inheritedfrom
                    id:
                      type: string
                      description: id
                description: Guest
  /api/v1.00/checklists/{cardUUID}:
    get:
      summary: Get - Card Checklists
      description: >-
        Returns all checklists and the checklist items associated with the
        specified card.
      operationId: Get-CardChecklists
      parameters:
        - name: cardUUID
          in: path
          required: true
          type: string
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
      responses:
        '200':
          description: '200'
          schema:
            type: array
            items:
              type: object
              properties:
                name:
                  type: string
                  description: name
                created:
                  type: string
                  description: created
                uuid:
                  type: string
                  description: uuid
                carduuid:
                  type: string
                  description: carduuid
                useruuid:
                  type: string
                  description: useruuid
                items:
                  type: array
                  items:
                    type: object
                    properties:
                      title:
                        type: string
                        description: title
                      complete:
                        type: integer
                        format: int32
                        description: complete
                      created:
                        type: string
                        description: created
                      uuid:
                        type: string
                        description: uuid
                      id:
                        type: string
                        description: id
                  description: items
                id:
                  type: string
                  description: id
  /api/v1.00/checklistitems/{checklistUUID}:
    get:
      summary: Get - Checklist Items
      description: Returns all checklist items associated with the specified checklist
      operationId: Get-ChecklistItems
      parameters:
        - name: checklistUUID
          in: path
          required: true
          type: string
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
      responses:
        '200':
          description: '200'
          schema:
            type: array
            items:
              type: object
              properties:
                uuid:
                  type: string
                  description: uuid
                title:
                  type: string
                  description: title
                checked:
                  type: integer
                  format: int32
                  description: checked
                created:
                  type: string
                  description: created
                id:
                  type: string
                  description: id
  /api/v1.00/boardrecords/{boardUUID}:
    get:
      summary: Get - Board Records
      description: >-
        Returns all records of activity that have happened on the specified
        board.
      operationId: Get-BoardRecords
      parameters:
        - name: boardUUID
          in: path
          required: true
          type: string
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
      responses:
        '200':
          description: '200'
          schema:
            type: array
            items:
              type: object
              properties:
                uuid:
                  type: string
                  description: uuid
                json:
                  type: object
                  properties:
                    description:
                      type: string
                      description: description
                    show:
                      type: boolean
                      description: show
                    user_name:
                      type: string
                      description: user_name
                    photo:
                      type: string
                      description: photo
                    date:
                      type: string
                      description: date
                    what:
                      type: object
                      properties:
                        name:
                          type: string
                          description: name
                        board_uuid:
                          type: string
                          description: board_uuid
                      description: what
                  description: json
                created:
                  type: string
                  description: created
                id:
                  type: string
                  description: id
  /api/v1.00/cardrecords/{cardUUID}:
    get:
      summary: Get - Card Records
      description: >-
        Returns all records of activity that have happened on the specified
        card.
      operationId: Get-CardRecords
      parameters:
        - name: cardUUID
          in: path
          required: true
          type: string
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
      responses:
        '200':
          description: '200'
          schema:
            type: array
            items:
              type: object
              properties:
                uuid:
                  type: string
                  description: uuid
                json:
                  type: object
                  properties:
                    description:
                      type: string
                      description: description
                    show:
                      type: boolean
                      description: show
                    user_name:
                      type: string
                      description: user_name
                    photo:
                      type: string
                      description: photo
                    date:
                      type: string
                      description: date
                    what:
                      type: object
                      properties:
                        name:
                          type: string
                          description: name
                        board_uuid:
                          type: string
                          description: board_uuid
                      description: what
                  description: json
                created:
                  type: string
                  description: created
                id:
                  type: string
                  description: id
  /api/v1.00/listrecords/{listUUID}:
    get:
      summary: Get - List Records
      description: >-
        Returns all records of activity that have happened on the specified
        list.
      operationId: Get-ListRecords
      parameters:
        - name: listUUID
          in: path
          required: true
          type: string
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
      responses:
        '200':
          description: '200'
          schema:
            type: array
            items:
              type: object
              properties:
                uuid:
                  type: string
                  description: uuid
                json:
                  type: object
                  properties:
                    description:
                      type: string
                      description: description
                    show:
                      type: boolean
                      description: show
                    user_name:
                      type: string
                      description: user_name
                    photo:
                      type: string
                      description: photo
                    date:
                      type: string
                      description: date
                  description: json
                created:
                  type: string
                  description: created
                id:
                  type: string
                  description: id
  /api/v1.00/clients/{boardUUID}:
    get:
      summary: Get - Tree Clients
      description: >-
        Returns all clients accessible by the current user and specified Project
        Tree.
      operationId: Get-TreeClients
      parameters:
        - name: boardUUID
          in: path
          required: true
          type: string
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
      responses:
        '200':
          description: '200'
          schema:
            type: object
            properties:
              current_page:
                type: integer
                format: int32
                description: current_page
              data:
                type: array
                items:
                  type: object
                  properties:
                    uuid:
                      type: string
                      description: uuid
                    name:
                      type: string
                      description: name
                    company:
                      type: string
                      description: company
                    email:
                      type: string
                      description: email
                    phone:
                      type: string
                      description: phone
                    address:
                      type: string
                      description: address
                    id:
                      type: string
                      description: id
                description: data
              first_page_url:
                type: string
                description: first_page_url
              from:
                type: integer
                format: int32
                description: from
              next_page_url:
                type: string
                description: next_page_url
              path:
                type: string
                description: path
              per_page:
                type: integer
                format: int32
                description: per_page
              prev_page_url:
                type: string
                description: prev_page_url
              to:
                type: integer
                format: int32
                description: to
  /api/v1.00/boardhierarchy/{boardUUID}:
    get:
      summary: Get - Board Hierarchy
      description: Returns the hierarchical structure for the specified board.
      operationId: Get-BoardHierarchy
      parameters:
        - name: boardUUID
          in: path
          required: true
          type: string
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
      responses:
        '200':
          description: '200'
          schema:
            type: array
            items:
              type: object
              properties:
                dabbed10559a11ec986459ee7f940894:
                  type: object
                  properties:
                    hex:
                      type: string
                      description: hex
                    name:
                      type: string
                      description: name
                    children:
                      type: array
                      items:
                        type: object
                        properties:
                          41eb1000ca5a5d2bbfb7b5c2974e1020:
                            type: object
                            properties:
                              hex:
                                type: string
                                description: hex
                              name:
                                type: string
                                description: name
                              children:
                                type: array
                                items:
                                  type: string
                                description: children
                            description: 41eb1000ca5a5d2bbfb7b5c2974e1020
                      description: children
                  description: dabbed10559a11ec986459ee7f940894
  /api/v1.00/add/card/{boardUUID}:
    post:
      summary: Action - Add Card
      description: Adds a card to the specified board within the specified list.
      operationId: Action-AddCard
      parameters:
        - name: boardUUID
          in: path
          required: true
          type: string
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
          format: byte
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
                description: Name of this new card
                title: Name
              listuuid:
                type: string
                description: Identifier of the list to put the new card into
                title: List UUID
            required:
              - listuuid
              - name
      responses:
        '200':
          description: '200'
          schema:
            type: object
            properties:
              status:
                type: string
                description: status
              carduuid:
                type: string
                description: carduuid
              board_update:
                type: object
                properties:
                  lastUpdate:
                    type: integer
                    format: int32
                    description: lastUpdate
                  thisUpdate:
                    type: integer
                    format: int32
                    description: thisUpdate
                description: board_update
  /api/v1.00/delete/card/{cardUUID}:
    post:
      summary: Action - Delete Card
      description: >-
        Deletes the specified card/board and its child objects as long as
        confirmed is 1. Please ensure that that all affected child objects are
        good to be deleted as well.
      operationId: Action-DeleteCard
      parameters:
        - name: cardUUID
          in: path
          required: true
          type: string
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              confirmed:
                type: integer
                description: Setting this to 1 will confirm the deletion
                title: Confirmed
                format: 'null'
            required:
              - confirmed
      responses:
        '200':
          description: '200'
          schema:
            type: object
            properties:
              status:
                type: string
                description: status
              carduuid:
                type: string
                description: carduuid
              boarduuid:
                type: string
                description: boarduuid
              board_update:
                type: object
                properties:
                  lastUpdate:
                    type: integer
                    format: int32
                    description: lastUpdate
                  thisUpdate:
                    type: integer
                    format: int32
                    description: thisUpdate
                description: board_update
  /api/v1.00/add/message/{boardUUID}:
    post:
      summary: Action - Add Message to Board
      description: Adds a message to the specified boards Messaging tray.
      operationId: Action-AddMessageToBoard
      parameters:
        - name: boardUUID
          in: path
          required: true
          type: string
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              message:
                type: string
                description: Message to send to Board Messaging
                title: Message
            required:
              - message
      responses:
        '200':
          description: '200'
          schema:
            type: object
            properties:
              status:
                type: string
                description: status
              messageuuid:
                type: string
                description: messageuuid
  /api/v1.00/add/comment/{cardUUID}:
    post:
      summary: Action - Add Comment to Card
      description: Adds a comment to the specified card.
      operationId: Action-AddCommentToCard
      parameters:
        - name: cardUUID
          in: path
          required: true
          type: string
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              comment:
                type: string
                description: New comment to add to the card specified
                title: Comment
            required:
              - comment
      responses:
        '200':
          description: '200'
          schema:
            type: object
            properties:
              status:
                type: string
                description: status
              commentuuid:
                type: string
                description: commentuuid
              board_update:
                type: object
                properties:
                  lastUpdate:
                    type: integer
                    format: int32
                    description: lastUpdate
                  thisUpdate:
                    type: integer
                    format: int32
                    description: thisUpdate
                description: board_update
  /api/v1.00/add/checklist/{cardUUID}:
    post:
      summary: Action - Add Checklist to Card
      description: Adds an empty checklist to the card specified.
      operationId: Action-AddChecklistToCard
      parameters:
        - name: cardUUID
          in: path
          required: true
          type: string
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
                description: The name of the new checklist to add to the specified card
                title: Name
            required:
              - name
      responses:
        '200':
          description: '200'
          schema:
            type: object
            properties:
              status:
                type: string
                description: status
              checklistuuid:
                type: string
                description: checklistuuid
              board_update:
                type: object
                properties:
                  lastUpdate:
                    type: integer
                    format: int32
                    description: lastUpdate
                  thisUpdate:
                    type: integer
                    format: int32
                    description: thisUpdate
                description: board_update
  /api/v1.00/rename/checklist/{checklistUUID}:
    post:
      summary: Action - Rename Checklist
      description: Renames the specified checklist to the name specified.
      operationId: Action-RenameChecklist
      parameters:
        - name: checklistUUID
          in: path
          required: true
          type: string
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
                description: The new name for the checklist
                title: Name
            required:
              - name
      responses:
        '200':
          description: '200'
          schema:
            type: object
            properties:
              status:
                type: string
                description: status
              board_update:
                type: object
                properties:
                  lastUpdate:
                    type: integer
                    format: int32
                    description: lastUpdate
                  thisUpdate:
                    type: integer
                    format: int32
                    description: thisUpdate
                description: board_update
  /api/v1.00/delete/checklist/{checklistUUID}:
    post:
      summary: Action - Delete Checklist
      description: Deletes the specified checklist as long as confirmed is 1.
      operationId: Action-DeleteChecklist
      parameters:
        - name: checklistUUID
          in: path
          required: true
          type: string
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              confirmed:
                type: integer
                description: Setting this to 1 will confirm the deletion
                title: Confirmed
                format: 'null'
            required:
              - confirmed
      responses:
        '200':
          description: '200'
          schema:
            type: object
            properties:
              status:
                type: string
                description: status
              board_update:
                type: object
                properties:
                  lastUpdate:
                    type: integer
                    format: int32
                    description: lastUpdate
                  thisUpdate:
                    type: integer
                    format: int32
                    description: thisUpdate
                description: board_update
  /api/v1.00/add/checklistitem/{checklistUUID}:
    post:
      summary: Action - Add Checklist Item to Checklist
      description: Adds a checklist item to the checklist specified.
      operationId: Action-AddChecklistItemToChecklist
      parameters:
        - name: checklistUUID
          in: path
          required: true
          type: string
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
                description: >-
                  Name of the new checklist item to be added to the specified
                  checklist
                title: Name
            required:
              - name
      responses:
        '200':
          description: '200'
          schema:
            type: object
            properties:
              status:
                type: string
                description: status
              checklistitemuuid:
                type: string
                description: checklistitemuuid
              board_update:
                type: object
                properties:
                  lastUpdate:
                    type: integer
                    format: int32
                    description: lastUpdate
                  thisUpdate:
                    type: integer
                    format: int32
                    description: thisUpdate
                description: board_update
  /api/v1.00/check/checklistitem/{checklistItemUUID}:
    post:
      summary: Action - Check Checklist Item
      description: Put a checkmark in the checklist item specified.
      operationId: Action-CheckChecklistItem
      parameters:
        - name: checklistItemUUID
          in: path
          required: true
          type: string
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
      responses:
        '200':
          description: '200'
          schema:
            type: object
            properties:
              status:
                type: string
                description: status
              board_update:
                type: object
                properties:
                  lastUpdate:
                    type: integer
                    format: int32
                    description: lastUpdate
                  thisUpdate:
                    type: integer
                    format: int32
                    description: thisUpdate
                description: board_update
  /api/v1.00/uncheck/checklistitem/{checklistItemUUID}:
    post:
      summary: Action - Uncheck Checklist Item
      description: Remove the checkmark from the checklist specified.
      operationId: Action-UncheckChecklistItem
      parameters:
        - name: checklistItemUUID
          in: path
          required: true
          type: string
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
      responses:
        '200':
          description: '200'
          schema:
            type: object
            properties:
              status:
                type: string
                description: status
              board_update:
                type: object
                properties:
                  lastUpdate:
                    type: integer
                    format: int32
                    description: lastUpdate
                  thisUpdate:
                    type: integer
                    format: int32
                    description: thisUpdate
                description: board_update
  /api/v1.00/rename/checklistitem/{checklistItemUUID}:
    post:
      summary: Action - Rename Checklist Item
      description: Renames the specified checklist item to the name specified.
      operationId: Action-RenameChecklistItem
      parameters:
        - name: checklistItemUUID
          in: path
          required: true
          type: string
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
                description: The new name for the specified
                title: Name
            required:
              - name
      responses:
        '200':
          description: '200'
          schema:
            type: object
            properties:
              status:
                type: string
                description: status
              board_update:
                type: object
                properties:
                  lastUpdate:
                    type: integer
                    format: int32
                    description: lastUpdate
                  thisUpdate:
                    type: integer
                    format: int32
                    description: thisUpdate
                description: board_update
  /api/v1.00/delete/checklistitem/{checklistItemUUID}:
    post:
      summary: Action - Delete Checklist Item
      description: Deletes the specified checklist item as long as confirmed is 1.
      operationId: Action-DeleteChecklistItem
      parameters:
        - name: checklistItemUUID
          in: path
          required: true
          type: string
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              confirmed:
                type: integer
                description: Setting this to 1 will confirm the deletion
                title: Confirmed
                format: 'null'
            required:
              - confirmed
      responses:
        '200':
          description: '200'
          schema:
            type: object
            properties:
              status:
                type: string
                description: status
              board_update:
                type: object
                properties:
                  lastUpdate:
                    type: integer
                    format: int32
                    description: lastUpdate
                  thisUpdate:
                    type: integer
                    format: int32
                    description: thisUpdate
                description: board_update
  /api/v1.00/add/list/{baordUUID}:
    post:
      summary: Action - Add List
      description: Adds a list to the board specified with the name specified.
      operationId: Action-AddList
      parameters:
        - name: baordUUID
          in: path
          required: true
          type: string
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
                description: Add a new list to the board specified
                title: Name
            required:
              - name
      responses:
        '200':
          description: '200'
          schema:
            type: object
            properties:
              board_update:
                type: object
                properties:
                  lastUpdate:
                    type: integer
                    format: int32
                    description: lastUpdate
                  thisUpdate:
                    type: integer
                    format: int32
                    description: thisUpdate
                description: board_update
              listuuid:
                type: string
                description: listuuid
              status:
                type: string
                description: status
              code:
                type: integer
                format: int32
                description: code
              order:
                type: integer
                format: int32
                description: order
  /api/v1.00/rename/list/{listUUID}:
    post:
      summary: Action - List Rename
      description: Renames the specified list to the name specified.
      operationId: Action-ListRename
      parameters:
        - name: listUUID
          in: path
          required: true
          type: string
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
                description: Rename the list specified
                title: Name
            required:
              - name
      responses:
        '200':
          description: '200'
          schema:
            type: object
            properties:
              status:
                type: string
                description: status
              board_update:
                type: object
                properties:
                  lastUpdate:
                    type: integer
                    format: int32
                    description: lastUpdate
                  thisUpdate:
                    type: integer
                    format: int32
                    description: thisUpdate
                description: board_update
  /api/v1.00/rename/board/{boardUUID}:
    post:
      summary: Action - Board Rename
      description: Renames the board specified to the name specified.
      operationId: Action-BoardRename
      parameters:
        - name: boardUUID
          in: path
          required: true
          type: string
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
                description: Rename the board specified
                title: Name
            required:
              - name
      responses:
        '200':
          description: '200'
          schema:
            type: object
            properties:
              status:
                type: string
                description: status
              board_update:
                type: object
                properties:
                  lastUpdate:
                    type: integer
                    format: int32
                    description: lastUpdate
                  thisUpdate:
                    type: integer
                    format: int32
                    description: thisUpdate
                description: board_update
  /api/v1.00/rename/card/{cardUUID}:
    post:
      summary: Action - Card Rename
      description: Renames the specified card to the name specified.
      operationId: Action-CardRename
      parameters:
        - name: cardUUID
          in: path
          required: true
          type: string
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
                description: Rename the card specified
                title: Name
            required:
              - name
      responses:
        '200':
          description: '200'
          schema:
            type: object
            properties:
              status:
                type: string
                description: status
              board_update:
                type: object
                properties:
                  lastUpdate:
                    type: integer
                    format: int32
                    description: lastUpdate
                  thisUpdate:
                    type: integer
                    format: int32
                    description: thisUpdate
                description: board_update
  /api/v1.00/rename/group/{groupUUID}:
    post:
      summary: Action - Group Rename
      description: Renames the specified group to the specified name.
      operationId: Action-GroupRename
      parameters:
        - name: groupUUID
          in: path
          required: true
          type: string
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
                description: Rename the group specified
                title: Name
            required:
              - name
      responses:
        '200':
          description: '200'
          schema:
            type: object
            properties:
              status:
                type: string
                description: status
              board_update:
                type: object
                properties:
                  lastUpdate:
                    type: integer
                    format: int32
                    description: lastUpdate
                  thisUpdate:
                    type: integer
                    format: int32
                    description: thisUpdate
                description: board_update
  /api/v1.00/move/card/{boardUUID}:
    post:
      summary: Action - Move Card
      description: >-
        Move the card specified "carduuid" on the board specified "boarduuid"
        from the list specified "fromlistuuid" to the list specified
        "tolistuuid" to position specified as "toposition" while being moved as
        the current user.

        <br><br>

        The response status, description and code will explain other aspects
        regarding the move, including whether the user was successfully clocked
        in or out of the specified card/task.
      operationId: Action-MoveCard
      parameters:
        - name: boardUUID
          in: path
          required: true
          type: string
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              carduuid:
                type: string
                description: Card Identifier to move
                title: Card UUID
              fromlistuuid:
                type: string
                description: Card Originating List Identifier
                title: From List UUID
              tolistuuid:
                type: string
                description: Card Destination List Identifier
                title: To List UUID
              toposition:
                type: integer
                description: Card Destination Position
                title: To Position
                format: 'null'
            required:
              - carduuid
              - fromlistuuid
              - tolistuuid
              - toposition
      responses:
        '200':
          description: '200'
          schema:
            type: object
            properties:
              status:
                type: string
                description: status
              board_update:
                type: object
                properties:
                  lastUpdate:
                    type: integer
                    format: int32
                    description: lastUpdate
                  thisUpdate:
                    type: integer
                    format: int32
                    description: thisUpdate
                description: board_update
              description:
                type: string
                description: description
              code:
                type: integer
                format: int32
                description: code
  /api/v1.00/assign/card/{cardUUID}:
    post:
      summary: Action - Assign to Card
      description: >-
        Assign a new or existing user to this Card or Board with a specified
        Role.<br><br>

        **Available Card Roles**<br>

        assignee<br>


        **Available Board Roles**<br>

        project-manager<br>

        project-admin<br>

        team-member<br>

        support<br>

        functional-manager<br>

        sponsor<br>

        tester<br>

        guest<br>

        assignee<br>

        client<br>
      operationId: Action-AssignToCard
      parameters:
        - name: cardUUID
          in: path
          required: true
          type: string
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
                description: >-
                  The email address of the person whom you wish to invite or
                  assign.
                title: Email
              role:
                type: string
                description: >-
                  The role (Chosen from the list of available roles) you wish to
                  assign.
                title: Role
            required:
              - email
              - role
      responses:
        '200':
          description: '200'
          schema:
            type: object
            properties:
              status:
                type: string
                description: status
              response:
                type: string
                description: response
              carduuid:
                type: string
                description: carduuid
              board_update:
                type: object
                properties:
                  lastUpdate:
                    type: integer
                    format: int32
                    description: lastUpdate
                  thisUpdate:
                    type: integer
                    format: int32
                    description: thisUpdate
                description: board_update
  /api/v1.00/assign/board/{boardUUID}:
    post:
      summary: Action - Assign to Board
      description: >-
        Assign a new or existing user to this Board with a specified
        Role.<br><br>

        **Available Board Roles**<br>

        project-manager<br>

        project-admin<br>

        team-member<br>

        support<br>

        functional-manager<br>

        sponsor<br>

        tester<br>

        guest<br>

        assignee<br>

        client<br>
      operationId: Action-AssignToBoard
      parameters:
        - name: boardUUID
          in: path
          required: true
          type: string
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
                description: >-
                  The email address of the person whom you wish to invite or
                  assign.
                title: Email
              role:
                type: string
                description: >-
                  The role (Chosen from the list of available roles) you wish to
                  assign.
                title: Role
            required:
              - email
              - role
      responses:
        '200':
          description: '200'
          schema:
            type: object
            properties:
              status:
                type: string
                description: status
              response:
                type: string
                description: response
              carduuid:
                type: string
                description: carduuid
              board_update:
                type: object
                properties:
                  lastUpdate:
                    type: integer
                    format: int32
                    description: lastUpdate
                  thisUpdate:
                    type: integer
                    format: int32
                    description: thisUpdate
                description: board_update
  /api/v1.00/unassign/card/{cardUUID}:
    post:
      summary: Action - Unassign from Card
      description: >-
        Unassign existing user from this Card or Board with a specified
        Role.<br><br>

        **Available Card Roles**<br>

        assignee<br>


        **Available Board Roles**<br>

        project-manager<br>

        project-admin<br>

        team-member<br>

        support<br>

        functional-manager<br>

        sponsor<br>

        tester<br>

        guest<br>

        assignee<br>

        client<br>
      operationId: Action-UnassignFromCard
      parameters:
        - name: cardUUID
          in: path
          required: true
          type: string
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
                description: The email address of the person whom you wish to unassign.
                title: Email
              role:
                type: string
                description: >-
                  The role (Chosen from the list of available roles) you wish to
                  unassign.
                title: Role
            required:
              - email
              - role
      responses:
        '200':
          description: '200'
          schema:
            type: object
            properties:
              status:
                type: string
                description: status
              response:
                type: string
                description: response
              carduuid:
                type: string
                description: carduuid
              board_update:
                type: object
                properties:
                  lastUpdate:
                    type: integer
                    format: int32
                    description: lastUpdate
                  thisUpdate:
                    type: integer
                    format: int32
                    description: thisUpdate
                description: board_update
  /api/v1.00/unassign/board/{boardUUID}:
    post:
      summary: Action - Unassign from Board
      description: |-
        Unassign existing user from this Card with a specified Role.<br><br>
        **Available Card Roles**<br>
        assignee<br>
      operationId: Action-UnassignFromBoard
      parameters:
        - name: boardUUID
          in: path
          required: true
          type: string
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
                description: The email address of the person whom you wish to unassign.
                title: Email
              role:
                type: string
                description: >-
                  The role (Chosen from the list of available roles) you wish to
                  unassign.
                title: Role
            required:
              - email
              - role
      responses:
        '200':
          description: '200'
          schema:
            type: object
            properties:
              status:
                type: string
                description: status
              response:
                type: string
                description: response
              carduuid:
                type: string
                description: carduuid
              board_update:
                type: object
                properties:
                  lastUpdate:
                    type: integer
                    format: int32
                    description: lastUpdate
                  thisUpdate:
                    type: integer
                    format: int32
                    description: thisUpdate
                description: board_update
  /api/v1.00/delete/list/{listUUID}:
    post:
      summary: Action - Delete List
      description: >-
        Deletes the specified list as long as confirmed is 1 and the list is
        empty.
      operationId: Action-DeleteList
      parameters:
        - name: listUUID
          in: path
          required: true
          type: string
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              confirmed:
                type: integer
                description: Setting this to 1 will confirm the deletion
                title: Confirmed
                format: 'null'
            required:
              - confirmed
      responses:
        '200':
          description: '200'
          schema:
            type: object
            properties:
              status:
                type: string
                description: status
              listuuid:
                type: string
                description: listuuid
              boarduuid:
                type: string
                description: boarduuid
              board_update:
                type: object
                properties:
                  lastUpdate:
                    type: integer
                    format: int32
                    description: lastUpdate
                  thisUpdate:
                    type: integer
                    format: int32
                    description: thisUpdate
                description: board_update
  /api/v1.00/tracking/list/{listUUID}:
    post:
      summary: Action - List Toggle Tracking
      description: >-
        Enable or Disable time tracking for this list. When time tracking is
        enabled, any card put in this list will be marked as clocked into for
        the user who moves it.
      operationId: Action-ListToggleTracking
      parameters:
        - name: listUUID
          in: path
          required: true
          type: string
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
        - name: body
          in: body
          required: false
          schema:
            type: object
            properties:
              value:
                type: boolean
                description: >-
                  Set this value to 0/1 to Disable/Enable respectively to time
                  tracking for this list. If this Value is not included, it will
                  toggle the list between Enabled or Disabled.
                title: Value
                format: 'null'
      responses:
        '200':
          description: '200'
          schema:
            type: object
            properties:
              status:
                type: string
                description: status
              board_update:
                type: object
                properties:
                  lastUpdate:
                    type: integer
                    format: int32
                    description: lastUpdate
                  thisUpdate:
                    type: integer
                    format: int32
                    description: thisUpdate
                description: board_update
  /api/v1.00/tester/list/{listUUID}:
    post:
      summary: Action - List Allow Testers
      description: >-
        Enable or Disable testers to add cards to this list. This is very
        advantageous for beta testing and such.
      operationId: Action-ListAllowTesters
      parameters:
        - name: listUUID
          in: path
          required: true
          type: string
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
        - name: body
          in: body
          required: false
          schema:
            type: object
            properties:
              value:
                type: boolean
                description: >-
                  Set this value to 0/1 to Disable/Enable respectively testers
                  to add cards to this list. If this Value is not included, it
                  will toggle the list between Enabled or Disabled.
                title: Value
                format: 'null'
      responses:
        '200':
          description: '200'
          schema:
            type: object
            properties:
              status:
                type: string
                description: status
              board_update:
                type: object
                properties:
                  lastUpdate:
                    type: integer
                    format: int32
                    description: lastUpdate
                  thisUpdate:
                    type: integer
                    format: int32
                    description: thisUpdate
                description: board_update
  /api/v1.00/weighting/list/{listUUID}:
    post:
      summary: Action - List Weighting
      description: >-
        Enable/Disable Smart Progress to automatically set weighting of of this
        list to determine all cards contained in this list to appropriated
        contribute to the cumulative boards progress. If disabled, you will
        manually adjust the weighting of this list using the range slider to
        determine the minimum and maximum percentage contribution to the parent
        board of any card within this list.
      operationId: Action-ListWeighting
      parameters:
        - name: listUUID
          in: path
          required: true
          type: string
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
        - name: body
          in: body
          required: false
          schema:
            type: object
            properties:
              value:
                type: boolean
                description: >-
                  Set this value to 0/1 to Enable/Disable Smart Progress/Manual
                  Weighting of cards progress to this list. If this Value is not
                  included, it will toggle the list between Enabled or Disabled.
                  When Enabled, Smart Progress will evaluate the number of lists
                  in the board to determine weighting automatically.
                title: Value
                format: 'null'
      responses:
        '200':
          description: '200'
          schema:
            type: object
            properties:
              status:
                type: string
                description: status
              board_update:
                type: object
                properties:
                  lastUpdate:
                    type: integer
                    format: int32
                    description: lastUpdate
                  thisUpdate:
                    type: integer
                    format: int32
                    description: thisUpdate
                description: board_update
  /api/v1.00/weight/list/{listUUID}:
    post:
      summary: Action - List Weighting Adjust
      description: >-
        Smart Progress MUST be disabled to set weighting of of this list.
        Weighting is set to determine all cards contained in this list to
        appropriated contribute to the cumulative boards progress. This is the
        same as using the range slider to determine the minimum and maximum
        percentage contribution to the parent board of any card within this
        list.
      operationId: Action-ListWeightingAdjust
      parameters:
        - name: listUUID
          in: path
          required: true
          type: string
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              Weighting Range:
                type: integer
                description: >-
                  This array should contain the first number as the minimum
                  percentage contribution and the second contains the maximum
                  percentage contribution. Each integer should be minimum of 0
                  and maximum of 100. This should be in a JSON array format:
                  [45, 55]. This example would indicate that the range of
                  contribution to the parent board for any card placed in this
                  list would be between 45% and 55%.<br><br>**Example**<br>[45,
                  55]
                title: Weighting Range
                format: 'null'
            required:
              - Weighting Range
      responses:
        '200':
          description: '200'
          schema:
            type: object
            properties:
              status:
                type: string
                description: status
              board_update:
                type: object
                properties:
                  lastUpdate:
                    type: integer
                    format: int32
                    description: lastUpdate
                  thisUpdate:
                    type: integer
                    format: int32
                    description: thisUpdate
                description: board_update
  /api/v1.00/limit/list/{listUUID}:
    post:
      summary: Action - List Card Limit
      description: >-
        Set the limit to the number of cards allowed for this list. 0 =
        Unlimited, while any other positive integer is valid.
      operationId: Action-ListCardLimit
      parameters:
        - name: listUUID
          in: path
          required: true
          type: string
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              value:
                type: integer
                description: The number of cards allowed within this list. 0 = Unlimited
                title: Value
                format: 'null'
            required:
              - value
      responses:
        '200':
          description: '200'
          schema:
            type: object
            properties:
              status:
                type: string
                description: status
              board_update:
                type: object
                properties:
                  lastUpdate:
                    type: integer
                    format: int32
                    description: lastUpdate
                  thisUpdate:
                    type: integer
                    format: int32
                    description: thisUpdate
                description: board_update
  /api/v1.00/progress/card/{cardUUID}:
    post:
      summary: Action - Card Progress
      description: >-
        Sets the progress for the specified card. Minimum value is 0 while
        maximum value is 100.
      operationId: Action-CardProgress
      parameters:
        - name: cardUUID
          in: path
          required: true
          type: string
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              value:
                type: integer
                description: >-
                  The percentage of completion for this card.task. Min = 0, Max
                  = 100
                title: Value
                format: 'null'
            required:
              - value
      responses:
        '200':
          description: '200'
          schema:
            type: object
            properties:
              status:
                type: string
                description: status
              board_update:
                type: object
                properties:
                  lastUpdate:
                    type: integer
                    format: int32
                    description: lastUpdate
                  thisUpdate:
                    type: integer
                    format: int32
                    description: thisUpdate
                description: board_update
  /api/v1.00/recurse/card/{cardUUID}:
    post:
      summary: Action - Recurse Card
      description: >-
        Recurse this Card into a Board so that it can contain child cards, or
        recurse back to a card. When acting as a card any children will become
        hidden. This property can be set or toggled.
      operationId: Action-RecurseCard
      parameters:
        - name: cardUUID
          in: path
          required: true
          type: string
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
        - name: body
          in: body
          required: false
          schema:
            type: object
            properties:
              value:
                type: boolean
                description: >-
                  Set this value to 0/1 to Recurse/Unrecurse or Card/Board
                  respectively to convert this card to a board or vice versa. If
                  this Value is not included, it will toggle the between a Card
                  and a Board.
                title: Value
                format: 'null'
      responses:
        '200':
          description: '200'
          schema:
            type: object
            properties:
              status:
                type: string
                description: status
              board_update:
                type: object
                properties:
                  lastUpdate:
                    type: integer
                    format: int32
                    description: lastUpdate
                  thisUpdate:
                    type: integer
                    format: int32
                    description: thisUpdate
                description: board_update
  /api/v1.00/recurse/board/{boardUUID}:
    post:
      summary: Action - Recurse Board
      description: >-
        Recurse this Board into a Card, or recurse back to a Board so that it
        can contain child cards. When acting as a card any children will become
        hidden. This property can be set or toggled.
      operationId: Action-RecurseBoard
      parameters:
        - name: boardUUID
          in: path
          required: true
          type: string
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
        - name: body
          in: body
          required: false
          schema:
            type: object
            properties:
              value:
                type: boolean
                description: >-
                  Set this value to 0/1 to Recurse/Unrecurse or Card/Board
                  respectively to convert this card to a board or vice versa. If
                  this Value is not included, it will toggle the between a Card
                  and a Board.
                title: Value
                format: 'null'
      responses:
        '200':
          description: '200'
          schema:
            type: object
            properties:
              status:
                type: string
                description: status
              board_update:
                type: object
                properties:
                  lastUpdate:
                    type: integer
                    format: int32
                    description: lastUpdate
                  thisUpdate:
                    type: integer
                    format: int32
                    description: thisUpdate
                description: board_update
  /api/v1.00/archive/card/{cardUUID}:
    post:
      summary: Action - Archive Card
      description: Archive this card.
      operationId: Action-ArchiveCard
      parameters:
        - name: cardUUID
          in: path
          required: true
          type: string
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
      responses:
        '200':
          description: '200'
          schema:
            type: object
            properties:
              status:
                type: string
                description: status
              board_update:
                type: object
                properties:
                  lastUpdate:
                    type: integer
                    format: int32
                    description: lastUpdate
                  thisUpdate:
                    type: integer
                    format: int32
                    description: thisUpdate
                description: board_update
  /api/v1.00/unarchive/card/{cardUUID}:
    post:
      summary: Action - Unarchive Card
      description: >-
        Unarchive this card. When unarchiving, a refresh of any browsers are
        needed to see this card recover visibly.
      operationId: Action-UnarchiveCard
      parameters:
        - name: cardUUID
          in: path
          required: true
          type: string
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
      responses:
        '200':
          description: '200'
          schema:
            type: object
            properties:
              status:
                type: string
                description: status
              board_update:
                type: object
                properties:
                  lastUpdate:
                    type: integer
                    format: int32
                    description: lastUpdate
                  thisUpdate:
                    type: integer
                    format: int32
                    description: thisUpdate
                description: board_update
  /api/v1.00/archive/list/{listUUID}:
    post:
      summary: Action - Archive List
      description: Archive this list. The list MUST be empty to archive it.
      operationId: Action-ArchiveList
      parameters:
        - name: listUUID
          in: path
          required: true
          type: string
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
      responses:
        '200':
          description: '200'
          schema:
            type: object
            properties:
              status:
                type: string
                description: status
              board_update:
                type: object
                properties:
                  lastUpdate:
                    type: integer
                    format: int32
                    description: lastUpdate
                  thisUpdate:
                    type: integer
                    format: int32
                    description: thisUpdate
                description: board_update
  /api/v1.00/unarchive/list/{listUUID}:
    post:
      summary: Action - Unarchive List
      description: >-
        Unarchive this list. When unarchiving, a refresh of any browsers are
        needed to see this list recover visibly.
      operationId: Action-UnarchiveList
      parameters:
        - name: listUUID
          in: path
          required: true
          type: string
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
      responses:
        '200':
          description: '200'
          schema:
            type: object
            properties:
              status:
                type: string
                description: status
              board_update:
                type: object
                properties:
                  lastUpdate:
                    type: integer
                    format: int32
                    description: lastUpdate
                  thisUpdate:
                    type: integer
                    format: int32
                    description: thisUpdate
                description: board_update
  /api/v1.00/archive/board/{boardUUID}:
    post:
      summary: Action - Archive Board
      description: >-
        Archive this board. When unarchiving a child board, a refresh of any
        browsers viewing the parent board are needed to see this board hide.
      operationId: Action-ArchiveBoard
      parameters:
        - name: boardUUID
          in: path
          required: true
          type: string
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
      responses:
        '200':
          description: '200'
          schema:
            type: object
            properties:
              status:
                type: string
                description: status
              board_update:
                type: object
                properties:
                  lastUpdate:
                    type: integer
                    format: int32
                    description: lastUpdate
                  thisUpdate:
                    type: integer
                    format: int32
                    description: thisUpdate
                description: board_update
  /api/v1.00/unarchive/board/{boardUUID}:
    post:
      summary: Action - Unarchive Board
      description: >-
        Unarchive this board. When unarchiving, a refresh of any browsers are
        needed to see this board recover visibly.
      operationId: Action-UnarchiveBoard
      parameters:
        - name: boardUUID
          in: path
          required: true
          type: string
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
      responses:
        '200':
          description: '200'
          schema:
            type: object
            properties:
              status:
                type: string
                description: status
              board_update:
                type: object
                properties:
                  lastUpdate:
                    type: integer
                    format: int32
                    description: lastUpdate
                  thisUpdate:
                    type: integer
                    format: int32
                    description: thisUpdate
                description: board_update
  /api/v1.00/estimate/card/{cardUUID}:
    post:
      summary: Action - Card Estimated Hours
      description: >-
        Set the number of estimated hours to complete this task. Decimals are
        acceptable.
      operationId: Action-CardEstimatedHours
      parameters:
        - name: cardUUID
          in: path
          required: true
          type: string
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              value:
                type: number
                description: Estimated number of hours to complete this task.
                title: Value
                format: float
            required:
              - value
      responses:
        '200':
          description: '200'
          schema:
            type: object
            properties:
              status:
                type: string
                description: status
              board_update:
                type: object
                properties:
                  lastUpdate:
                    type: integer
                    format: int32
                    description: lastUpdate
                  thisUpdate:
                    type: integer
                    format: int32
                    description: thisUpdate
                description: board_update
  /api/v1.00/notify/card/{cardUUID}:
    post:
      summary: Action - Card Notify Hours
      description: >-
        Set hours previous to the due date of this card to the assigned member
        of this card. Decimals are allowed.
      operationId: Action-CardNotifyHours
      parameters:
        - name: cardUUID
          in: path
          required: true
          type: string
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              value:
                type: number
                description: >-
                  Send a notification to the assigned member number of hours
                  previous to the due date of this card.
                title: Value
                format: float
            required:
              - value
      responses:
        '200':
          description: '200'
          schema:
            type: object
            properties:
              status:
                type: string
                description: status
              board_update:
                type: object
                properties:
                  lastUpdate:
                    type: integer
                    format: int32
                    description: lastUpdate
                  thisUpdate:
                    type: integer
                    format: int32
                    description: thisUpdate
                description: board_update
  /api/v1.00/start/card/{cardUUID}:
    post:
      summary: Action - Card Start DateTime
      description: >-
        Set the start date and time of this card. You must use MySQL time and
        date format. The timezone should be the UTC of the local time.<br><br>
        **For example:**<br> 2021-06-10 14:30:00
      operationId: Action-CardStartDatetime
      parameters:
        - name: cardUUID
          in: path
          required: true
          type: string
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              value:
                type: string
                description: >-
                  The start date for this card. This timezone should be the UTC
                  of the local time. Example: 2021-06-10 14:30:00
                title: Value
                format: date-time
            required:
              - value
      responses:
        '200':
          description: '200'
          schema:
            type: object
            properties:
              status:
                type: string
                description: status
              board_update:
                type: object
                properties:
                  lastUpdate:
                    type: integer
                    format: int32
                    description: lastUpdate
                  thisUpdate:
                    type: integer
                    format: int32
                    description: thisUpdate
                description: board_update
  /api/v1.00/end/card/{cardUUID}:
    post:
      summary: Action - Card End DateTime
      description: >-
        Set the end date and time of this card. You must use MySQL time and date
        format. The timezone should be the UTC of the local time.<br><br> **For
        example:**<br> 2021-06-10 14:30:00
      operationId: Action-CardEndDatetime
      parameters:
        - name: cardUUID
          in: path
          required: true
          type: string
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              value:
                type: string
                description: >-
                  The end date for this card. This timezone should be the UTC of
                  the local time. Example: 2021-06-10 14:30:00
                title: Value
                format: date-time
            required:
              - value
      responses:
        '200':
          description: '200'
          schema:
            type: object
            properties:
              status:
                type: string
                description: status
              board_update:
                type: object
                properties:
                  lastUpdate:
                    type: integer
                    format: int32
                    description: lastUpdate
                  thisUpdate:
                    type: integer
                    format: int32
                    description: thisUpdate
                description: board_update
  /api/v1.00/due/card/{cardUUID}:
    post:
      summary: Action - Card Due DateTime
      description: >-
        Set the due date and time of this card. You must use MySQL time and date
        format. The timezone should be the UTC of the local time.<br><br> **For
        example:**<br> 2021-06-10 14:30:00
      operationId: Action-CardDueDatetime
      parameters:
        - name: cardUUID
          in: path
          required: true
          type: string
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              value:
                type: string
                description: >-
                  The due date for this card. This timezone should be the UTC of
                  the local time. Example: 2021-06-10 14:30:00
                title: Value
                format: date-time
            required:
              - value
      responses:
        '200':
          description: '200'
          schema:
            type: object
            properties:
              status:
                type: string
                description: status
              board_update:
                type: object
                properties:
                  lastUpdate:
                    type: integer
                    format: int32
                    description: lastUpdate
                  thisUpdate:
                    type: integer
                    format: int32
                    description: thisUpdate
                description: board_update
  /api/v1.00/start/board/{boardUUID}:
    post:
      summary: Action - Board Start DateTime
      description: >-
        Set the start date and time of this board. You must use MySQL time and
        date format. The timezone should be the UTC of the local time.<br><br>
        **For example:**<br> 2021-06-10 14:30:00
      operationId: Action-BoardStartDatetime
      parameters:
        - name: boardUUID
          in: path
          required: true
          type: string
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              value:
                type: string
                description: >-
                  The start date for this board. This timezone should be the UTC
                  of the local time. Example: 2021-06-10 14:30:00
                title: Value
                format: date-time
            required:
              - value
      responses:
        '200':
          description: '200'
          schema:
            type: object
            properties:
              status:
                type: string
                description: status
              board_update:
                type: object
                properties:
                  lastUpdate:
                    type: integer
                    format: int32
                    description: lastUpdate
                  thisUpdate:
                    type: integer
                    format: int32
                    description: thisUpdate
                description: board_update
  /api/v1.00/end/board/{boardUUID}:
    post:
      summary: Action - Board End DateTime
      description: >-
        Set the end date and time of this board. You must use MySQL time and
        date format. The timezone should be the UTC of the local time.<br><br>
        **For example:**<br> 2021-06-10 14:30:00
      operationId: Action-BoardEndDatetime
      parameters:
        - name: boardUUID
          in: path
          required: true
          type: string
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              value:
                type: string
                description: >-
                  The end date for this board. This timezone should be the UTC
                  of the local time. Example: 2021-06-10 14:30:00
                title: Value
                format: date-time
            required:
              - value
      responses:
        '200':
          description: '200'
          schema:
            type: object
            properties:
              status:
                type: string
                description: status
              board_update:
                type: object
                properties:
                  lastUpdate:
                    type: integer
                    format: int32
                    description: lastUpdate
                  thisUpdate:
                    type: integer
                    format: int32
                    description: thisUpdate
                description: board_update
  /api/v1.00/due/board/{boardUUID}:
    post:
      summary: Action - Board Due DateTime
      description: >-
        Set the due date and time of this board. You must use MySQL time and
        date format. The timezone should be the UTC of the local time.<br><br>
        **For example:**<br> 2021-06-10 14:30:00
      operationId: Action-BoardDueDatetime
      parameters:
        - name: boardUUID
          in: path
          required: true
          type: string
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              value:
                type: string
                description: >-
                  The due date for this board. This timezone should be the UTC
                  of the local time. Example: 2021-06-10 14:30:00
                title: Value
                format: date-time
            required:
              - value
      responses:
        '200':
          description: '200'
          schema:
            type: object
            properties:
              status:
                type: string
                description: status
              board_update:
                type: object
                properties:
                  lastUpdate:
                    type: integer
                    format: int32
                    description: lastUpdate
                  thisUpdate:
                    type: integer
                    format: int32
                    description: thisUpdate
                description: board_update
  /api/v1.00/estimate/board/{boardUUID}:
    post:
      summary: Action - Board Estimated Hours
      description: >-
        Set the number of estimated hours to complete this project. Decimals are
        acceptable.
      operationId: Action-BoardEstimatedHours
      parameters:
        - name: boardUUID
          in: path
          required: true
          type: string
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              value:
                type: number
                description: Estimated number of hours to complete this project.
                title: Value
                format: float
            required:
              - value
      responses:
        '200':
          description: '200'
          schema:
            type: object
            properties:
              status:
                type: string
                description: status
              board_update:
                type: object
                properties:
                  lastUpdate:
                    type: integer
                    format: int32
                    description: lastUpdate
                  thisUpdate:
                    type: integer
                    format: int32
                    description: thisUpdate
                description: board_update
  /api/v1.00/notify/board/{boardUUID}:
    post:
      summary: Action - Board Notify Hours
      description: >-
        Set hours previous to the due date of this board to the project manager
        of this board. Decimals are allowed.
      operationId: Action-BoardNotifyHours
      parameters:
        - name: boardUUID
          in: path
          required: true
          type: string
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              value:
                type: number
                description: >-
                  Send a notification to the project manager number of hours
                  previous to the due date of this board.
                title: Value
                format: float
            required:
              - value
      responses:
        '200':
          description: '200'
          schema:
            type: object
            properties:
              status:
                type: string
                description: status
              board_update:
                type: object
                properties:
                  lastUpdate:
                    type: integer
                    format: int32
                    description: lastUpdate
                  thisUpdate:
                    type: integer
                    format: int32
                    description: thisUpdate
                description: board_update
  /api/v1.00/tags/{cardUUID}:
    get:
      summary: Get - Card Tags
      description: Returns all the tags associated with the specified card.
      operationId: Get-CardTags
      parameters:
        - name: cardUUID
          in: path
          required: true
          type: string
        - name: Accept
          in: header
          required: true
          type: string
          default: application/json
      responses:
        '200':
          description: '200'
          schema:
            type: array
            items:
              type: object
              properties:
                uuid:
                  type: string
                  description: uuid
                name:
                  type: string
                  description: name
                color:
                  type: string
                  description: color
                texture:
                  type: integer
                  format: int32
                  description: texture
                shortcut:
                  type: string
                  description: shortcut
                immutable:
                  type: integer
                  format: int32
                  description: immutable
                id:
                  type: string
                  description: id
definitions: {}
parameters: {}
responses: {}
securityDefinitions:
  oauth2-auth:
    type: oauth2
    flow: accessCode
    authorizationUrl: https://app.krozu.com/oauth/authorize
    tokenUrl: https://app.krozu.com/oauth/token
    scopes:
      profile-public profile-email profile-owned get-info perform-actions: profile-public profile-email profile-owned get-info perform-actions
security:
  - oauth2-auth:
      - profile-public profile-email profile-owned get-info perform-actions
tags: []
